class Solution:
    def combinationSum(self, candidates, target):
        if len(candidates) == 1:
            if target % candidates[0] == 0:
                return [[candidates[0]] * (target//candidates[0])]
            else:
                return []
        else:
            res = []
            for idx, _candidate in enumerate(candidates):
                if _candidate > target:
                    continue
                elif _candidate == target:
                    res.append([_candidate])
                else:
                    _candidates = candidates[idx:]
                    _res = self.combinationSum(_candidates, target-_candidate)
                    res.extend([[_candidate] + _comb for _comb in _res])
            return res 

if __name__ == '__main__':
    solution = Solution()
    nums = [2,3,6,7]
    target = 7
    print(solution.combinationSum(nums, target))

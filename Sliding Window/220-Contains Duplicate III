"""
Given an integer array nums and two integers k and t, return true if there are two distinct indices i and j in the array such that abs(nums[i] - nums[j]) <= t and abs(i - j) <= k. 

Example 1:
Input: nums = [1,2,3,1], k = 3, t = 0
Output: true

Example 2:
Input: nums = [1,0,1,1], k = 1, t = 2
Output: true

Example 3:
Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false
 
Constraints:
1 <= nums.length <= 2 * 104
-231 <= nums[i] <= 231 - 1
0 <= k <= 104
0 <= t <= 231 - 1
"""
import bisect
class Solution:
    def containsNearbyAlmostDuplicate(self, nums, k, t):
        window = []
        w_left, w_right = 0, 0
        while w_right < len(nums):
            if w_right - w_left > k:
                window.remove(nums[w_left])
                w_left += 1
            idx = bisect.bisect(window, nums[w_right])
            if idx > 0 and abs(window[idx-1]-nums[w_right]) <= t:
                return True
            if idx < len(window) and abs(window[idx]-nums[w_right]) <= t:
                return True
            bisect.insort(window, nums[w_right])
            w_right += 1
        return False

if __name__ == '__main__':
    solution = Solution()
    nums = [1,5,9,1,5,9]
    k = 2
    t = 3
    print(solution.containsNearbyAlmostDuplicate(nums, k, t))
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSubtree(self, root, subRoot):
        if subRoot is None:
            return True
        elif root is None:
            return False
        elif self.isEqual(root, subRoot):
                return True
        else:
            if self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot):
                return True
            return False
    
    def isEqual(self, root1, root2):
        if root1 is None:
            if root2 is None:
                return True
            else:
                return False
        else:
            if root2 is None:
                return False
            if root1.val != root2.val:
                return False
            else:
                if self.isEqual(root1.left, root2.left) and self.isEqual(root1.right, root2.right):
                    return True
                else:
                    return False
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        if not needle:
            return 0
        k = -1
        pi = self.computePrefix(needle)
        for idx in range(0, len(haystack)):
            while k>=0 and haystack[idx] != needle[k+1]:
                k = pi[k]
            if haystack[idx] == needle[k+1]:
                k += 1
                if k == len(needle)-1:
                    return idx-k
        return -1
        
    def computePrefix(self, pattern):
        length = len(pattern)
        pi = [-1] * length
        k = -1
        for idx in range(1, length):
            while k >= 0 and pattern[k+1] != pattern[idx]:
                k = pi[k]
            if pattern[k+1] == pattern[idx]:
                k += 1
            pi[idx] = k
        return pi

if __name__ == '__main__':
    solution = Solution()
    print(solution.strStr('aaa', 'aaa'))